#Modules in Python are simply Python files with the .py extension, which implement a set of functions. 
# https://docs.python.org/3/library/
# Check out the full list of built-in modules in the Python standard library

>>> import urllib
>>> dir(urllib)

##We can look for which functions are implemented in each module by using the dir function

help(urllib.urlopen)

## When we find the function in the module we want to use, we can read about it more using the help function, inside the Python interpreter

###Writing Python modules is very simple. To create a module of your own, simply create a new .py file with the module name, and then import it using the Python file name (without the .py extension) using the import command.

##Packages are namespaces which contain multiple packages and modules themselves. They are simply directories, but with a twist.

##Each package in Python is a directory which MUST contain a special file called __init__.py. This file can be empty, and it indicates that the directory it contains is a Python package, so it can be imported the same way a module can be imported.

##If we create a directory called foo, which marks the package name, we can then create a module inside that package called bar. We also must not forget to add the __init__.py file inside the foo directory.

##foo/
##├── bar.py
##└── __init__.py


import foo.bar

#or

from foo import bar

## To use the module bar, we can import it in two ways

#__init__.py:

#__all__ = ["bar"]

##The __init__.py file can also decide which modules the package exports as the API, while keeping other modules internal, by overriding the __all__ variable
